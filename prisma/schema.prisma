// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model User {
  user_id    String   @id @default(uuid())
  email      String   @unique
  password   String
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

  @@map("users")
}

model Company {
  company_id    String   @id @default(uuid())
  cnpj          String   @unique
  address       String
  fantasy_name  String
  social_reason String
  segment       String
  monthly_fee   Float
  commission    Float
  created_at    DateTime @default(now())
  updated_at    DateTime @updatedAt
  Budget        Budget[]

  @@map("companies")
}

model Professional {
  professional_id String    @id @default(uuid())
  cpf             String    @unique
  name            String
  type            String
  desk            String
  created_at      DateTime  @default(now())
  updated_at      DateTime  @updatedAt
  project         Project[]

  @@map("professionals")
}

model Project {
  project_id      String   @id @default(uuid())
  professional_id String
  title           String
  description     String
  created_at      DateTime @default(now())
  updated_at      DateTime @updatedAt

  professional Professional @relation(fields: [professional_id], references: [professional_id])
  budget       Budget[]

  @@map("projects")
}

model Budget {
  budget_id   String   @id @default(uuid())
  project_id  String
  company_id  String?
  title       String
  description String
  file_url    String?
  status      String   @default("pending")
  created_at  DateTime @default(now())
  updated_at  DateTime @updatedAt

  project Project  @relation(fields: [project_id], references: [project_id])
  company Company? @relation(fields: [company_id], references: [company_id])
  Ticket  Ticket[]
  Sale    Sale[]

  @@map("budgets")
}

model Ticket {
  ticket_id   String   @id @default(uuid())
  title       String
  description String
  created_at  DateTime @default(now())
  updated_at  DateTime @updatedAt

  budget_id String
  budget    Budget @relation(fields: [budget_id], references: [budget_id])

  @@map("tickets")
}

model Sale {
  sale_id    String   @id @default(uuid())
  title      String
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

  budget_id String
  budget    Budget @relation(fields: [budget_id], references: [budget_id])

  @@map("sales")
}
